export default {
  structureType: "Form",
  components: [
    {
      id: 100,
      priority: 1,
      parentId: 0,
      visible: true,
      componentName: "CreateDispAquaHeader",
      component: "EPCSFormHeader",
      props: { title: "Следование в акваторию СМП", headerButtons: {} },
    },
    {
      id: 199,
      priority: 1,
      component: "EPCSDirection",
      componentName: "EPCSDirectionMain",
      props: {
        type: "row",
      },
    },

    {
      id: 3,
      parentId: 199,
      priority: 1,
      component: "EPCSTabs",
      componentName: "DispFloatDetailTabs",
      props: {
        dataTabs: [
          {
            name: "Сведения",
          },
          {
            name: "Маршрут",
          },
        ],
      },
    },
    {
      id: 4,
      priority: 1,
      parentId: 3,
      component: "EPCSDirection",
      componentName: "tab1",
      col: 12,
      props: {
        type: "row",
      },
    },
    {
      id: 5,
      priority: 1,
      parentId: 3,
      component: "EPCSDirection",
      componentName: "tab2",
      props: {
        type: "row",
      },
    },
    {
      id: 198,
      parentId: 4,
      priority: 1,
      component: "EPCSDirection",
      componentName: "EPCSDirectionSubMain",
      col: 6,
      props: {
        type: "row",
      },
    },
    {
      id: 101,
      parentId: 198,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "name",
      props: {
        type: "selectAsync",
        placeholder: "Выберете судно",
        items: [],
        label: "1// Название судна",
        labelPosition: "top",
        value: "",
        event: "fillShip",
        labelRequired: true,
        asyncSetting: {
          displayExpr: "name",
          valueExpr: "id",
          customValue: true,
          asyncName: "Ship",
          templateRow: {
            id: null,
            name: "",
            imo: null,
          },
        },
      },
    },
    {
      id: 102,
      parentId: 198,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "imo",
      props: {
        type: "selectAsync",
        placeholder: "Номер IMO",
        label: "2// Номер  IMO (при наличии)",
        labelPosition: "top",
        value: "",
        labelRequired: false,
        items: [],
        event: "fillShip",
        // pattern:"^(.{7})$",
        invalidMessage: "IMO должно состоять из 7 символов",

        asyncSetting: {
          displayExpr: "imo",
          valueExpr: "id",
          customValue: true,
          asyncName: "Ship",
          templateRow: {
            id: null,
            name: "",
            imo: null,
          },
        },
      },
    },
    {
      id: 103,
      parentId: 198,
      priority: 1,
      component: "EPCSDirection",
      componentName: "EPCSDirection",
      props: {
        type: "row",
        label: "3// Порт/место отхода судна, фактические дата и время (московское) отхода ",
      },
    },
    {
      id: 104,
      parentId: 103,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "departureDate",
      col: 6,
      props: {
        type: "date",
        value: "",
        placeholder: "дд.мм.гггг 00:00",
      },
    },
    {
      id: 105,
      parentId: 103,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "departurePlace",
      col: 6,
      props: {
        type: "text",
        placeholder: "Выберите порт/место отхода",
        value: "",
      },
    },
    {
      id: 206,
      parentId: 198,
      priority: 1,
      component: "EPCSDirection",
      componentName: "EPCSDirectionCoordinates",
      props: {
        type: "row",
        event: "changeCoords",
      },
    },
    {
      id: 207,
      parentId: 206,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "departureLat",
      col: 3,
      props: {
        type: "number",
        step: 1,
        label: "Широта",
        labelPosition: "top",
        placeholder: "0.0",
      },
    },
    {
      id: 208,
      parentId: 206,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "EPCSCUSTOMdepartureLat",
      col: 2,
      props: {
        type: "select",
        items: ["N", "S"],
        placeholder: "N",
        value: "N",
      },
    },
    {
      id: 209,
      parentId: 206,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "departureLon",
      col: 3,
      props: {
        type: "number",
        step: 1,
        label: "Долгота",
        labelPosition: "top",
        placeholder: "0.0",
      },
    },
    {
      id: 210,
      parentId: 206,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "EPCSCUSTOMdepartureLon",
      col: 2,
      props: {
        type: "select",
        items: ["E", "W"],
        placeholder: "E",
        value: "E",
      },
    },
    {
      id: 211,
      parentId: 206,
      priority: 1,
      component: "EPCSButtonTittleBar",
      visible: true,
      componentName: "EPCSTEST141d2312422",
      col: 1,
      props: {
        iconData: "F056",
        isPressed: false,
        event: "addMarker",
        label: "",
        type: "small",
        disabled: false,
        name: "EPCSDirectionCoordinates",
      },
    },
    {
      id: 106,
      parentId: 198,
      priority: 1,
      component: "EPCSDirection",
      visible: true,
      componentName: "direccccc",
      props: {
        type: "row",
        label: "4// Порт/место назначения судна, предполагаемые дата и время (московское) прибытия  ",
      },
    },

    {
      id: 107,
      parentId: 106,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "destinationDate",
      col: 6,
      props: {
        type: "date",
        value: "",
        placeholder: "дд.мм.гггг 00:00",
      },
    },
    {
      id: 108,
      parentId: 106,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "destinationPlace",
      col: 6,
      props: {
        type: "text",
        placeholder: "Выберите порт/место прибытия",
        value: "",
      },
    },
    {
      id: 212,
      parentId: 198,
      priority: 1,
      component: "EPCSDirection",
      componentName: "EPCSDestination",
      props: {
        type: "row",
        event: "changeCoords",
      },
    },
    {
      id: 213,
      parentId: 212,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "destinationLat",
      col: 3,
      props: {
        type: "number",
        step: 1,
        label: "Широта",
        labelPosition: "top",

        placeholder: "0.0",
      },
    },
    {
      id: 214,
      parentId: 212,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "EPCSCUSTOMdestinationLat",
      col: 2,
      props: {
        type: "select",
        items: ["N", "S"],
        placeholder: "N",
        value: "N",
      },
    },
    {
      id: 215,
      parentId: 212,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "destinationLon",
      col: 3,
      props: {
        type: "number",
        step: 1,
        label: "Долгота",
        labelPosition: "top",
        placeholder: "0.0",
      },
    },
    {
      id: 216,
      parentId: 212,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "EPCSCUSTOMdestinationLon",
      col: 2,
      props: {
        type: "select",
        items: ["E", "W"],
        placeholder: "E",
        value: "E",
      },
    },
    {
      id: 217,
      parentId: 212,
      priority: 1,
      component: "EPCSButtonTittleBar",
      visible: true,
      componentName: "EPCSBTNdestination",
      col: 1,
      props: {
        iconData: "F056",
        isPressed: false,
        event: "addMarker",
        label: "",
        type: "small",
        disabled: false,
        name: "EPCSDestination",
      },
    },
    {
      id: 109,
      parentId: 198,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "draught", // ???
      props: {
        type: "number",
        step: 1,
        label: "5// Максимальная действующая осадка судна, м",
        labelPosition: "left",
        placeholder: "0.0",
      },
    },

    {
      id: 110,
      parentId: 198,
      priority: 1,
      component: "EPCSDataGrid",
      visible: true,
      componentName: "ctFk",
      props: {
        noDataText: "Груз отстутствует",
        tableData: [
          {
            type: "Тип груза",
            sum: "Количество",
          },
        ],
        eventDoubleClick: "openShip",
        eventClick: "activeShipRow",
        pageSize: 10,
        selectionMode: "single",
        edit: true,
        rowTemplate: ["type","num"],
        inputColumnNames: {
          type: "Тип груза",
          num: "Количество",
        },
        columnComponents: {
          type: {
            type: "selectAsync",
            placeholder: "Выберете тип груза",
            items: [],
            value: "",
            asyncSetting: {
              displayExpr: "name",
              valueExpr: "id",
              customValue: true,
              asyncName: "CargoTypes",
              templateRow: {
                id: null,
                name: "",
              },
            },
          },
          num: {
            type: "number",
            placeholder: "0",
            value: null,
          },
        },
      },
    },
    {
      id: 111,
      parentId: 198,
      priority: 1,
      component: "EPCSDirection",
      visible: true,
      componentName: "direc1as23a",
      props: {
        type: "row",
        label: "6// Тип и количество в метрических тоннах перевозимого судном груза", //???
      },
    },
    {
      id: 112,
      parentId: 111,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "yo", // ???
      col: 6,
      props: {
        type: "text",
        items: [1, 2],
        placeholder: "Выберите тип груза",
      },
    },
    {
      id: 113,
      parentId: 111,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "yo1",
      col: 6,
      props: {
        type: "number",
        step: 1,
        placeholder: "0.0",
      },
    },
    // {
    //   id: 114,
    //   priority: 1,
    //   parentId: 198,
    //   component: "EPCSAccordion",
    //   visible: true,
    //   componentName: "acc12",
    //   props: {
    //     typeAddBtn: "outline",
    //     addLabel: "Добавить класс опасности",
    //     typeRemoveBtn: "primary",
    //     removeLabel: "Удалить класс опасности",
    //   },
    // },
    {
      id: 115,
      parentId: 114,
      priority: 1,
      component: "EPCSDirection",
      visible: true,
      componentName: "direc1as223a",
      props: {
        type: "row",
        label: "7// Наличие, количество в метрических тоннах и класс перевозимых судном опасных грузов (при наличии)",
      },
    },
    {
      id: 116,
      parentId: 115,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "yo22",
      col: 6,
      props: {
        type: "text",
        items: [1, 2],
        placeholder: "Выберите класс опасности",
      },
    },
    {
      id: 117,
      parentId: 115,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "yo122",
      col: 6,
      props: {
        type: "number",
        step: 1,
        placeholder: "0.0",
      },
    },
    {
      id: 118,
      parentId: 198,
      priority: 1,
      component: "EPCSDirection",
      visible: true,
      componentName: "EPCSdirec1as22sadf3a",
      props: {
        type: "row",
        label: `8\/\/ Запас топлива с указанием типа топлива в метрических тоннах/количество суток, в течение которых 
        судно может следовать без пополнения топлива, на момент доклада`,
      },
    },
    {
      id: 119,
      parentId: 118,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "fuelHeavy",
      col: 6,
      props: {
        type: "number",
        step: 1,
        label: "Тяжелое топливо",
        labelPosition: "top",
        placeholder: "0.0",
        items: ["1", "2"],
      },
    },
    {
      id: 120,
      parentId: 118,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "fuelLight",
      col: 6,
      props: {
        type: "number",
        step: 1,
        label: "Легкое топливо",
        labelPosition: "top",
        placeholder: "0.0",
        items: ["1", "2"],
      },
    },
    {
      id: 121,
      parentId: 118,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "fuelSpg",
      col: 6,
      props: {
        type: "number",
        step: 1,
        label: "Топливо СПГ",
        labelPosition: "top",
        placeholder: "0.0",
        items: ["1", "2"],
      },
    },
    {
      id: 122,
      parentId: 118,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "fuelDays",
      col: 6,
      props: {
        type: "number",
        step: 1,
        label: "Сутки",
        labelPosition: "top",
        placeholder: "0.0",
        items: ["1", "2"],
      },
    },
    {
      id: 123,
      priority: 1,
      parentId: 198,
      component: "EPCSFormInput",
      visible: true,
      componentName: "waterDays",
      props: {
        type: "number",
        step: 1,
        label:
          "9// Запас пресной воды с учетом пополнения пресной водой от опреснительной установки судна (при наличии) на момент доклада (указывается количество суток, в течение которых судно может следовать без пополнения запаса пресной воды)",
        labelPosition: "top",
        placeholder: "0.0",
      },
    },
    {
      id: 124,
      priority: 1,
      parentId: 198,
      component: "EPCSFormInput",
      visible: true,
      componentName: "provisionDays",
      props: {
        type: "number",
        step: 1,
        label:
          "10// Запас продовольствия и других видов судового снабжения на момент доклада (указывается количество суток, в течение которых судно может следовать без пополнения запаса продовольствия и других видов судового снабжения)",
        labelPosition: "top",
        placeholder: "0.0",
      },
    },
    {
      id: 125,
      priority: 1,
      parentId: 198,
      component: "EPCSDirection",
      visible: true,
      componentName: "direc1as22sadf32a",
      props: {
        type: "row",
        label: "11// Количество членов экипажа и пассажиров на судне",
      },
    },
    {
      id: 126,
      parentId: 125,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "crew",
      col: 6,
      props: {
        type: "number",
        step: 1,
        placeholder: "0.0",
        label: "Экипаж",
        labelPosition: "left",
      },
    },
    {
      id: 127,
      parentId: 125,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "passangers",
      col: 6,
      props: {
        type: "number",
        step: 1,
        placeholder: "0.0",
        label: "Пассажиры",
        labelPosition: "left",
      },
    },
    {
      id: 128,
      priority: 1,
      parentId: 198,
      component: "EPCSFormInput",
      visible: true,
      componentName: "damage",
      props: {
        type: "text",
        value: "НЕТ",
        items: ["НЕТ", "ДА"],
        label:
          "12// Сведения о повреждениях корпуса, неисправностях судовых машин, механизмов и (или) технических средств (при наличии)",
        labelPosition: "top",
        placeholder: "",
      },
    },
    // {
    //   id: 129,
    //   priority: 1,
    //   parentId: 198,
    //   component: "EPCSAccordion",
    //   visible: true,
    //   componentName: "acc1221231",
    //   props: {
    //     typeAddBtn: "outline",
    //     addLabel: "Добавить данные объекта",
    //     typeRemoveBtn: "primary",
    //     removeLabel: "Удалить данные объекта",
    //   },
    // },
    {
      id: 130,
      parentId: 129,
      priority: 1,
      component: "EPCSDirection",
      visible: true,
      componentName: "ddir1",
      props: {
        type: "row",
        label:
          "13// Название, номер ИМО (при наличии) буксируемых/толкаемых плавучих объектов, тип и количество груза, количество членов экипажа и пассажиров на них (при наличии)",
      },
    },
    {
      id: 131,
      parentId: 130,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "inp1231234",
      col: 6,
      props: {
        type: "text",
        placeholder: "Укажите название объекта",
      },
    },
    {
      id: 132,
      parentId: 130,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "inpdsdf231",
      col: 6,
      props: {
        type: "text",
        placeholder: "Укажите номер ИМО",
      },
    },
    {
      id: 133,
      parentId: 130,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "yo22sdfwe433",
      col: 6,
      props: {
        type: "number",
        step: 1,
        placeholder: "0.0",
        label: "Экипаж",
        labelPosition: "left",
      },
    },
    {
      id: 134,
      parentId: 130,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "yo22sdf4233",
      col: 6,
      props: {
        type: "number",
        step: 1,
        placeholder: "0.0",
        label: "Пассажиры",
        labelPosition: "left",
      },
    },
    {
      id: 135,
      parentId: 130,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "inp2341231234",
      col: 6,
      props: {
        type: "text",
        placeholder: "Выберите тип груза",
        items: [1, 2],
      },
    },
    {
      id: 136,
      parentId: 130,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "inp234123sdf1234",
      col: 6,
      props: {
        type: "number",
        step: 1,
        placeholder: "0.0",
        label: "Вес груза",
        labelPosition: "left",
      },
    },
    {
      id: 137,
      priority: 1,
      parentId: 198,
      component: "EPCSDirection",
      visible: true,
      componentName: "ddir21",
      props: {
        type: "row",
        label:
          "14// Предполагаемые дата и время (московское) входа судна в акваторию СМП, включая название планируемого места пересечения границы СМП ",
      },
    },
    {
      id: 138,
      parentId: 137,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "enterDate", //????
      col: 6,
      props: {
        type: "date",
        placeholder: "дд.мм.гггг 00:00",
      },
    },
    {
      id: 139,
      parentId: 137,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "enterPlace",
      col: 6,
      props: {
        type: "text",
        placeholder: "Выберите место пересечения", //????
        items: [1, 2],
      },
    },
    {
      id: 218,
      parentId: 198,
      priority: 1,
      component: "EPCSDirection",
      componentName: "EPCSEnter",
      props: {
        type: "row",
        event: "changeCoords",
      },
    },
    {
      id: 219,
      parentId: 218,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "enterLat",
      col: 3,
      props: {
        type: "number",
        step: 1,
        label: "Широта",
        labelPosition: "top",

        placeholder: "0.0",
      },
    },
    {
      id: 220,
      parentId: 218,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "EPCSCUSTOMenterLat",
      col: 2,
      props: {
        type: "select",
        items: ["N", "S"],
        placeholder: "N",
        value: "N",
      },
    },
    {
      id: 221,
      parentId: 218,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "enterLon",
      col: 3,
      props: {
        type: "number",
        step: 1,
        label: "Долгота",
        labelPosition: "top",
        placeholder: "0.0",
      },
    },
    {
      id: 222,
      parentId: 218,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "EPCSCUSTOMenterLon",
      col: 2,
      props: {
        type: "select",
        items: ["E", "W"],
        placeholder: "E",
        value: "E",
      },
    },
    {
      id: 223,
      parentId: 218,
      priority: 1,
      component: "EPCSButtonTittleBar",
      visible: true,
      componentName: "EPCSBTNexit",
      col: 1,
      props: {
        iconData: "F056",
        isPressed: false,
        event: "addMarker",
        label: "",
        type: "small",
        disabled: false,
        name: "EPCSEnter",
      },
    },
    {
      id: 101,
      parentId: 4,
      priority: 1,
      component: "EPCSMap",
      visible: true,
      col: 6,
      componentName: "EPCSCreateDispAquaMap",
      name: "CreateDispAquaMap",
      props: { mapId: "CreateDispAquaMap" },
    },
    {
      id: 309,
      parentId: 5,
      priority: 1,
      component: "EPCSDirection",
      componentName: "routeLeftSide",
      col: 5,
      props: {
        type: "row",
      },
    },

    {
      id: 901,
      parentId: 309,
      priority: 1,
      component: "EPCSDirection",
      componentName: "routeLabel",
      col: 10,
      props: {
        label: `Введите координаты точек предполагаемого маршрута плавания в поля ввода координат или нарисуйте маршрут на карте`,
      },
    },

    {
      id: 902,
      priority: 1,
      parentId: 309,
      componentName: "activateRouteMapButton",
      component: "EPCSButtonTittleBar",
      col: 1,
      props: {
        event: "activateRouteMap",
        iconData: "F08F",
        isPressed: false,
      },
    },

    {
      id: 903,
      priority: 1,
      parentId: 309,
      componentName: "clearRouteButton",
      component: "EPCSButtonTittleBar",
      col: 1,
      props: {
        event: "clearRoute",
        iconData: "F06C",
        isPressed: false,
      },
    },

    {
      id: 904,
      parentId: 309,
      priority: 1,
      component: "EPCSDirection",
      componentName: "route",
      col: 12,
      props: {
        type: "row",
        event: "coordinatesChange",
      },
    },
    {
      id: 905,
      parentId: 5,
      priority: 1,
      component: "EPCSMap",
      componentName: "routeMap",
      name: "routeMap",
      col: 7,
      props: {
        mapId: "routeMap",
        event: "mapCoordinatesChange",
      },
    },
    {
      id: 200,
      priority: 5,
      component: "EPCSFooter",
      visible: true,
      componentName: "EPCSFooter",
      props: {
        leftEvent: "checkSave",
        leftType: "primary",
        leftLabel: "Назад",
        rightLabel: "Отправить",
        rightType: "primary",
        rightEvent: "saveDisp",
      },
    },
    {
      id: 202,
      priority: 1,
      parentId: 0,
      visible: true,
      component: "EPCSPopup",
      componentName: "EPCSPopup",
    },
  ],
};
