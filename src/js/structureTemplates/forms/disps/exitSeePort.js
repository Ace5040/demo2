import headerButtons from "../../header/headerButtons";

export default {
  structureType: "Form",
  components: [
    {
      id: 100,
      priority: 1,
      parentId: 0,
      visible: true,
      componentName: "CreateDispAquaHeader",
      component: "EPCSFormHeader",
      props: { title: "Выход из морского порта РФ", headerButtons: {} },
    },
    {
      id: 199,
      priority: 1,
      component: "EPCSDirection",
      componentName: "EPCSDirectionMain",
      props: {
        type: "row",
      },
    },
    {
      id: 198,
      parentId: 199,
      priority: 1,
      component: "EPCSDirection",
      componentName: "EPCSDirectionSubMain",
      col: 6,
      props: {
        type: "row",
      },
    },
    {
      id: 101,
      parentId: 198,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "name",
      props: {
        type: "selectAsync",
        placeholder: "Выберете судно",
        items: [],
        label: "1// Название судна",
        labelPosition: "top",
        value: "",
        event: "fillShip",
        labelRequired: true,
        asyncSetting: {
          displayExpr: "name",
          valueExpr: "id",
          customValue: true,
          asyncName: "Ship",
          templateRow: {
            id: null,
            name: "",
            imo: null,
          },
        },
      },
    },
    {
      id: 102,
      parentId: 198,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "imo",
      props: {
        type: "selectAsync",
        placeholder: "Номер IMO",
        label: "2// Номер  IMO (при наличии)",
        labelPosition: "top",
        value: "",
        labelRequired: false,
        items: [],
        event: "fillShip",
        asyncSetting: {
          displayExpr: "imo",
          valueExpr: "id",
          customValue: true,
          asyncName: "Ship",
          templateRow: {
            id: null,
            name: "",
            imo: null,
          },
        },
      },
    },
    {
      id: 103,
      parentId: 198,
      priority: 1,
      component: "EPCSDirection",
      componentName: "EPCSDirection",
      props: {
        type: "row",
        label: "3// Порт/место отхода судна, фактические дата и время (московское) отхода ",
      },
    },
    {
      id: 104,
      parentId: 103,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "departureDate",
      col: 6,
      props: {
        type: "date",
      },
    },
    {
      id: 105,
      parentId: 103,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      col: 6,
      componentName: "departurePlace",
      props: {
        placeholder: "Выберите порт/локацию",
        value: "",
        type: "selectAsync",
        items: [],
        event: "departure",
        labelRequired: true,
        asyncSetting: {
          displayExpr: "name",
          valueExpr: "name",
          customValue: true,
          asyncName: "Portplace",
          templateRow: {
            name: "",
          },
        },
      },
    },
    {
      id: 206,
      parentId: 103,
      priority: 1,
      component: "EPCSDirection",
      componentName: "EPCSdeparture",
      props: {
        type: "row",
        event: "changeCoords",
      },
    },
    {
      id: 207,
      parentId: 206,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "departureLat",
      col: 4,
      props: {
        type: "number",
        step: 1,
        label: "Широта",
        labelPosition: "top",
        placeholder: "0.0",
        value: null,
      },
    },
    {
      id: 208,
      parentId: 206,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "EPCSdepartureLat",
      col: 2,
      props: {
        type: "select",
        items: ["N", "S"],
        placeholder: "N",
        value: "N",
      },
    },
    {
      id: 209,
      parentId: 206,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "departureLon",
      col: 4,
      props: {
        type: "number",
        step: 1,
        label: "Долгота",
        labelPosition: "top",
        placeholder: "0.0",
        value: null,
      },
    },
    {
      id: 210,
      parentId: 206,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "EPCSdepartureLon",
      col: 2,
      props: {
        type: "select",
        items: ["E", "W"],
        placeholder: "E",
        value: "E",
      },
    },
    {
      id: 106,
      parentId: 198,
      priority: 1,
      component: "EPCSDirection",
      visible: true,
      componentName: "EPCStination12312Place",
      props: {
        type: "row",
        label: "4// Порт/место назначения судна, предполагаемые дата и время (московское) прибытия  ",
      },
    },
    //Добавить широту и долготу
    {
      id: 107,
      parentId: 106,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "destinationDate",
      col: 6,
      props: {
        type: "date",
      },
    },
    {
      id: 108,
      parentId: 106,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      col: 6,
      componentName: "destinationPlace",
      props: {
        placeholder: "Выберите порт/локацию",
        value: "",
        type: "selectAsync",
        items: [],
        event: "destination",
        labelRequired: true,
        asyncSetting: {
          displayExpr: "name",
          valueExpr: "name",
          customValue: true,
          asyncName: "Portplace",
          templateRow: {
            // id: null,
            name: "",
          },
        },
      },
    },
    {
      id: 309,
      parentId: 198,
      priority: 1,
      component: "EPCSDirection",
      componentName: "EPCSdestination",
      props: {
        type: "row",
        event: "changeCoords",
      },
    },
    {
      id: 310,
      parentId: 309,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "destinationLat",
      col: 4,
      props: {
        type: "number",
        step: 1,
        label: "Широта",
        labelPosition: "top",
        placeholder: "0.0",
        value: null,
      },
    },
    {
      id: 311,
      parentId: 309,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "EPCSdestinationLat",
      col: 2,
      props: {
        type: "select",
        items: ["N", "S"],
        placeholder: "N",
        value: "N",
      },
    },
    {
      id: 312,
      parentId: 309,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "destinationLon",
      col: 4,
      props: {
        type: "number",
        step: 1,
        label: "Долгота",
        labelPosition: "top",
        placeholder: "0.0",
        value: null,
      },
    },
    {
      id: 313,
      parentId: 309,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "EPCSdestinationLon",
      col: 2,
      props: {
        type: "select",
        items: ["E", "W"],
        placeholder: "E",
        value: "E",
      },
    },
    {
      id: 109,
      parentId: 198,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "draught", //????
      props: {
        type: "number",
        step: 1,
        label: "5// Максимальная действующая осадка судна, м",
        labelPosition: "left",
        placeholder: "0.0",
      },
    },
    {
      id: 110,
      parentId: 198,
      priority: 1,
      component: "EPCSEditDataGrid",
      visible: true,
      componentName: "cargoTypes",
      props: {
        num: true,
        label:"6// Тип и количество в метрических тоннах перевозимого судном груза",
        inputColumnNames: {
          N: "N",
          cargoType: "Тип груза",
          amount: "Количество",
        },
        tableData: [],
        columnComponents: {
          cargoType: {
            component: "EPCSFormInput",
            props: {
              type: "select",
              placeholder: "Выберете тип груза",
              items: [],
              value: "",
              disabled: false,
            },
          }, 
          amount: {
            component: "EPCSFormInput",
            props: {
              type: "number",
              placeholder: "0.0",
              value: null,
              disabled: false,
            },
          },
        },
        value: [
          []
        ],
      },
    },
    {
      id: 111,
      parentId: 198,
      priority: 1,
      component: "EPCSEditDataGrid",
      visible: true,
      componentName: "hazardClasses",
      props: {
        num: true,
        label:"7// Наличие, количество в метрических тоннах и класс перевозимых судном опасных грузов (при наличии)",
        inputColumnNames: {
          N: "N",
          hazardClasses: "Класс опасности",
          amount: "Количество",
        },
        tableData: [],
        columnComponents: {
          hazardClasses: {
            component: "EPCSFormInput",
            props: {
              type: "select",
              placeholder: "Выберете класс опасности",
              items: [],
              value: "",
              disabled: false,
            },
          }, 
          amount: {
            component: "EPCSFormInput",
            props: {
              type: "number",
              placeholder: "0.0",
              value: null,
              disabled: false,
            },
          },
        },
        value: [
          []
        ],
      },
    },
    {
      id: 118,
      parentId: 198,
      priority: 1,
      component: "EPCSDirection",
      visible: true,
      componentName: "EPCSdirec1as22sadf3a",
      props: {
        type: "row",
        label: `8\/\/ Запас топлива с указанием типа топлива в метрических тоннах/количество суток, в течение которых 
        судно может следовать без пополнения топлива, на момент доклада`,
      },
    },
    {
      id: 119,
      parentId: 118,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "fuelHeavy",
      col: 6,
      props: {
        type: "number",
        step: 1,
        label: "Тяжелое топливо",
        labelPosition: "top",
        placeholder: "0.0",
        items: ["1", "2"],
      },
    },
    {
      id: 120,
      parentId: 118,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "fuelLight",
      col: 6,
      props: {
        type: "number",
        step: 1,
        label: "Легкое топливо",
        labelPosition: "top",
        placeholder: "0.0",
        items: ["1", "2"],
      },
    },
    {
      id: 121,
      parentId: 118,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "fuelSpg",
      col: 6,
      props: {
        type: "number",
        step: 1,
        label: "топливо СПГ",
        labelPosition: "top",
        placeholder: "0.0",
        items: ["1", "2"],
      },
    },
    {
      id: 122,
      parentId: 118,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "fuelDays",
      col: 6,
      props: {
        type: "number",
        step: 1,
        label: "Сутки",
        labelPosition: "top",
        placeholder: "0.0",
        items: ["1", "2"],
      },
    },
    {
      id: 123,
      priority: 1,
      parentId: 198,
      component: "EPCSFormInput",
      visible: true,
      componentName: "waterDays",
      props: {
        type: "number",
        step: 1,
        label: `9\/\/ Запас пресной воды с учетом пополнения пресной водой от опреснительной установки судна (при наличии) на 
          момент доклада (указывается количество суток, в течение которых судно может следовать без пополнения запаса пресной воды)`,
        labelPosition: "top",
        placeholder: "0.0",
      },
    },
    {
      id: 124,
      priority: 1,
      parentId: 198,
      component: "EPCSFormInput",
      visible: true,
      componentName: "provisionDays",
      props: {
        type: "number",
        step: 1,
        label:
          "10// Запас продовольствия и других видов судового снабжения на момент доклада (указывается количество суток, в течение которых судно может следовать без пополнения запаса продовольствия и других видов судового снабжения)",
        labelPosition: "top",
        placeholder: "0.0",
      },
    },
    {
      id: 125,
      priority: 1,
      parentId: 198,
      component: "EPCSDirection",
      visible: true,
      componentName: "direc1as22sadf32a",
      props: {
        type: "row",
        label: "11// Количество членов экипажа и пассажиров на судне",
      },
    },
    {
      id: 126,
      parentId: 125,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "crew",
      col: 6,
      props: {
        type: "number",
        step: 1,
        placeholder: "0.0",
        label: "Экипаж",
        labelPosition: "left",
      },
    },
    {
      id: 127,
      parentId: 125,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "passangers",
      col: 6,
      props: {
        type: "number",
        step: 1,
        placeholder: "0.0",
        label: "Пассажиры",
        labelPosition: "left",
      },
    },
    {
      id: 128,
      priority: 1,
      parentId: 198,
      component: "EPCSFormInput",
      visible: true,
      componentName: "damage",
      props: {
        type: "text",
        value: "НЕТ",
        items: ["НЕТ", "ДА"],
        label:
          "12// Сведения о повреждениях корпуса, неисправностях судовых машин, механизмов и (или) технических средств (при наличии)",
        labelPosition: "top",
        placeholder: "",
      },
    },
    {
      id: 129,
      priority: 1,
      parentId: 198,
      component: "EPCSAccordion",
      visible: true,
      componentName: "acc1221231",
      props: {
        typeAddBtn: "outline",
        addLabel: "Добавить данные объекта",
        typeRemoveBtn: "primary",
        removeLabel: "Удалить данные объекта",
      },
    },
    {
      id: 130,
      parentId: 129,
      priority: 1,
      component: "EPCSDirection",
      visible: true,
      componentName: "ddir1",
      props: {
        type: "row",
        label:
          "13// Название, номер ИМО (при наличии) буксируемых/толкаемых плавучих объектов, тип и количество груза, количество членов экипажа и пассажиров на них (при наличии)",
      },
    },
    {
      id: 131,
      parentId: 130,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "inp1231234",
      col: 6,
      props: {
        type: "text",
        placeholder: "Укажите название объекта",
      },
    },
    {
      id: 132,
      parentId: 130,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "inpdsdf231",
      col: 6,
      props: {
        type: "text",
        placeholder: "Укажите номер ИМО",
      },
    },
    {
      id: 133,
      parentId: 130,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "yo22sdfwe433",
      col: 6,
      props: {
        type: "number",
        step: 1,
        placeholder: "0.0",
        label: "Экипаж",
        labelPosition: "left",
      },
    },
    {
      id: 134,
      parentId: 130,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "yo22sdf4233",
      col: 6,
      props: {
        type: "number",
        step: 1,
        placeholder: "0.0",
        label: "Пассажиры",
        labelPosition: "left",
      },
    },
    {
      id: 135,
      parentId: 130,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "inp2341231234",
      col: 6,
      props: {
        type: "text",
        placeholder: "Выберите тип груза",
        items: [1, 2],
      },
    },
    {
      id: 136,
      parentId: 130,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "inp234123sdf1234",
      col: 6,
      props: {
        type: "number",
        step: 1,
        placeholder: "0.0",
        label: "Вес груза",
        labelPosition: "left",
        step: 1,
      },
    },
    {
      id: 137,
      priority: 1,
      parentId: 198,
      component: "EPCSDirection",
      visible: true,
      componentName: "ddir21",
      props: {
        type: "row",
        label:
          "14// Планируемое время (московское) выхода из акватории СМП, включая вход во внутренние водные пути, или планируемое время прихода в морской порт, находящийся в акватории СМП (подхода к месту совершения грузовых операций вне акваторий морских портов)",
      },
    },
    {
      id: 138,
      parentId: 137,
      priority: 1,
      component: "EPCSRadioButtonGroup",
      visible: true,
      componentName: "exitType",
      col: 12,
      props: {
        type: "row",
        inputData: {
          1: "выхода из акватории СМП",
          2: "прихода в морской порт в акватории СМП",
        },
        value: 1,
      },
    },
    {
      id: 139,
      parentId: 137,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "exitDate",
      col: 6,
      props: {
        type: "date",
      },
    },
    {
      id: 140,
      parentId: 137,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      col: 6,
      componentName: "exitPlace",
      props: {
        placeholder: "Выберите порт/локацию",
        value: "",
        type: "selectAsync",
        items: [],
        event: "exit",
        labelRequired: true,
        asyncSetting: {
          displayExpr: "name",
          valueExpr: "name",
          customValue: true,
          asyncName: "Portplace",
          templateRow: {
            name: "",
          },
        },
      },
    },
    {
      id: 141,
      parentId: 198,
      priority: 1,
      component: "EPCSDirection",
      componentName: "EPCSexit",
      props: {
        type: "row",
        event: "changeCoords",
        label:'4\/\/ Географические координаты пересечения границы СМП'
      },
    },
    {
      id: 142,
      parentId: 141,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "exitLat",
      col: 4,
      props: {
        type: "number",
        step: 1,
        label: "Широта",
        labelPosition: "top",
        placeholder: "0.0",
        value: null,
      },
    },
    {
      id: 143,
      parentId: 141,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "EPCSexitLat",
      col: 2,
      props: {
        type: "select",
        items: ["N", "S"],
        placeholder: "N",
        value: "N",
      },
    },
    {
      id: 144,
      parentId: 141,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "exitLon", 
      col: 4,
      props: {
        type: "number",
        step: 1,
        label: "Долгота",
        labelPosition: "top",
        placeholder: "0.0",
        value: null,
      },
    },
    {
      id: 145,
      parentId: 141,
      priority: 1,
      component: "EPCSFormInput",
      visible: true,
      componentName: "EPCSexitLon",
      col: 2,
      props: {
        type: "select",
        items: ["E", "W"],
        placeholder: "E",
        value: "E",
      },
    },
    {
      id: 201,
      parentId: 199,
      priority: 1,
      component: "EPCSMap",
      visible: true,
      col: 6,
      componentName: "EPCSExitSeePortMap",
      name: "ExitSeePortMap",
      props: { mapId: "ExitSeePortMap" },
    },
    {
      id: 200,
      priority: 5,
      component: "EPCSFooter",
      visible: true,
      componentName: "EPCSFooter",
      props: {
        leftEvent: "checkSave",
        leftType: "primary",
        leftLabel: "Назад",
        rightLabel: "Отправить",
        rightType: "primary",
        rightEvent: "saveDisp",
      },
    },
    {
      id: 202,
      priority: 1,
      parentId: 0,
      visible: true,
      component: "EPCSPopup",
      componentName: "EPCSPopup",
    },
  ],
};
